/**
 * Telemetry API
 * The telemetry API allows you to send realtime telemetry of your aircrafts into your IDRONECT account. It will help you to log your flights and allow you to automate your maintenance folow-up.
 *
 * The version of the OpenAPI document: TEL-1.2.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DataResponseData model module.
 * @module model/DataResponseData
 * @version TEL-1.2.5
 */
class DataResponseData {
    /**
     * Constructs a new <code>DataResponseData</code>.
     * @alias module:model/DataResponseData
     * @param flightId {String} New flight id for replay
     */
    constructor(flightId) { 
        
        DataResponseData.initialize(this, flightId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, flightId) { 
        obj['flightId'] = flightId;
    }

    /**
     * Constructs a <code>DataResponseData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataResponseData} obj Optional instance to populate.
     * @return {module:model/DataResponseData} The populated <code>DataResponseData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataResponseData();

            if (data.hasOwnProperty('flightId')) {
                obj['flightId'] = ApiClient.convertToType(data['flightId'], 'String');
            }
            if (data.hasOwnProperty('aircraftId')) {
                obj['aircraftId'] = ApiClient.convertToType(data['aircraftId'], 'String');
            }
            if (data.hasOwnProperty('trackerId')) {
                obj['trackerId'] = ApiClient.convertToType(data['trackerId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * New flight id for replay
 * @member {String} flightId
 */
DataResponseData.prototype['flightId'] = undefined;

/**
 * Aircraft id linked to flight
 * @member {String} aircraftId
 */
DataResponseData.prototype['aircraftId'] = undefined;

/**
 * Tracker id linked to flight
 * @member {String} trackerId
 */
DataResponseData.prototype['trackerId'] = undefined;






export default DataResponseData;

